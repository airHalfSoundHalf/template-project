{"version":3,"file":"workbox-ae07cd5b.js","sources":["../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/_version.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/utils/constants.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/utils/normalizeHandler.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/Route.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/RegExpRoute.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/Router.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../../.yarn/berry/cache/workbox-routing-npm-6.6.1-77dd6e5a89-10c0.zip/node_modules/workbox-routing/registerRoute.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/_version.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/StrategyHandler.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/Strategy.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/utils/messages.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/NetworkFirst.js","../../.yarn/berry/cache/workbox-strategies-npm-6.6.1-670ada1218-10c0.zip/node_modules/workbox-strategies/NetworkOnly.js","../../.yarn/berry/cache/workbox-core-npm-6.6.1-a68aa82e6e-10c0.zip/node_modules/workbox-core/_version.js","../../.yarn/berry/cache/workbox-core-npm-6.6.1-a68aa82e6e-10c0.zip/node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-first-falling-back-to-cache)\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({\n            timeoutId,\n            request,\n            logs,\n            handler,\n        });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return ((await handler.waitUntil(Promise.race(promises))) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                (await networkPromise));\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler, }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler, }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            if (fetchError instanceof Error) {\n                error = fetchError;\n            }\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` + ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","defaultMethod","validMethods","normalizeHandler","handler","assert","hasMethod","moduleName","className","funcName","paramName","isType","handle","Route","constructor","match","method","isOneOf","setCatchHandler","catchHandler","RegExpRoute","regExp","isInstance","RegExp","url","result","exec","href","origin","location","index","logger","debug","toString","slice","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","type","payload","urlsToCache","requestPromises","Promise","all","map","entry","Request","waitUntil","ports","then","postMessage","URL","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","getFriendlyURL","groupCollapsed","forEach","msg","Array","isArray","log","groupEnd","err","reject","_catchHandler","catch","error","catchErr","Error","matchResult","warn","length","undefined","Object","keys","setDefaultHandler","set","registerRoute","unregisterRoute","WorkboxError","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","cacheOkAndOpaquePlugin","cacheWillUpdate","response","status","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","assign","_strategy","_handlerDeferred","Deferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","promise","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","thrownErrorMessage","message","pluginFilteredRequest","fetchResponse","fetchOptions","callback","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","key","cachedResponse","cacheName","matchOptions","effectiveRequest","getCacheKey","multiMatchOptions","caches","timeout","vary","headers","responseToCache","_ensureResponseSafeToCache","cache","open","hasCacheUpdateCallback","oldResponse","cacheMatchIgnoreParams","put","name","executeQuotaErrorCallbacks","newResponse","param","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","resolve","pluginsUsed","Strategy","cacheNames","getRuntimeName","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","messages","strategyStart","strategyName","printFinalResponse","NetworkFirst","some","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","logs","promises","timeoutId","id","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","setTimeout","fetchError","clearTimeout","NetworkOnly","clientsClaim","clients","claim"],"mappings":"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"}